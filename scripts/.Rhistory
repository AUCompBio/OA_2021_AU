getwd()
### Get data
datum=read.csv("C:/Users/TDS0009/Documents/GitHub/OA_2021_AU/data/matched_OA_data_fin.csv")
head(datum)
datum$OAlab[datum$OAlab=="Closed Accesr"]="Closed Access"
datum$OAlab[datum$OAlab=="Closed Access"]="Access Closed"
datum$OAlab <- as.factor(datum$OAlab)
levels(datum$OAlab)
datum$year=as.factor(datum$year)
levels(datum$year)
datum$JCR_quart=as.factor(datum$JCR_quart)
levels(datum$JCR_quart)
summary(as.factor(datum$auth_count))
which(is.na(datum$auth_count)==TRUE)
#print range of records by journal
range(summary(datum$jour))
#number of journals
length(unique(sort(datum$jour)))
summary(as.factor(datum$auth_count))
hist(datum$auth_count)
datum$jour=as.factor(datum$jour)
levels(datum$jour)
datum$field=as.factor(datum$field)
levels(datum$field)
#print range of records by journal
range(summary(datum$jour))
#number of journals
length(unique(sort(datum$jour)))
#number of field
length(unique(sort(datum$field)))
hist(datum$citations)#hist(datum$clean_citations)
mean(datum$citations) #mean(datum$clean_citations)
var(datum$citations) #var(datum$clean_citations)
head(datum)
datum$Issue=as.factor(datum$Issue)
levels(datum$Issue)
summary(datum$Issue)
which(is.na(datum$Issue)==TRUE)
Missing.Issue=which(is.na(datum$Issue)==TRUE)
#datum[103993,]
datum=datum[-Missing.Issue,]
which(is.na(datum$Issue)==TRUE)
summary(datum$Issue)
summary(datum$OAlab)
summary(datum$year)
summary(datum$JCR_quart)
summary(datum$jour)
summary(datum$field)
head(datum)
summary(as.factor(datum$citations))
head(datu)
head(datum)
#AIS
summary(datum$AIS)
hist(datum$AIS)
datum$auth_count_scaled <- scale(datum$auth_count)[,1]
summary(datum$auth_count)
summary(datum$auth_count_scaled)
#AIS
datum$AIS_scaled <- scale(datum$AIS)[,1]
summary(datum$AIS_scaled)
hist(datum$AIS_scaled)
#Access
datum$Gold=0
datum$Green=0
datum$Bronze=0
datum$Closed=0
for(i in 1:length(datum$citations)){
if(datum$OAlab[i]=="Other Gold"){datum$Gold[i]=1}
if(datum$OAlab[i]=="Green"){datum$Green[i]=1}
if(datum$OAlab[i]=="Bronze"){datum$Bronze[i]=1}
if(datum$OAlab[i]=="Access Closed"){datum$Closed[i]=1}
}
Table1=datum %>% group_by(field) %>%
summarise(NumberofJournals=length(unique(jour)),
NumberofArticles=length(citations),
Bronze=sum(Bronze),
ClosedAccess=sum(Closed),
Green=sum(Green),
OtherGold=sum(Gold))
library(tidyverse)
Table1=datum %>% group_by(field) %>%
summarise(NumberofJournals=length(unique(jour)),
NumberofArticles=length(citations),
Bronze=sum(Bronze),
ClosedAccess=sum(Closed),
Green=sum(Green),
OtherGold=sum(Gold))
Table1
sum(Table1$ClosedAccess)
sum(Table1$Bronze)+sum(Table1$Green)+sum(Table1$OtherGold)
sum(Table1$Bronze)
sum(Table1$Green)
sum(Table1$OtherGold)
jourCount=datum %>% group_by(jour) %>%
summarise(Articles=length(citations))
mean(jourCount$Articles)
min(jourCount$Articles)
max(jourCount$Articles)
#Count of samples by field
fieldCount=datum %>% group_by(field) %>%
summarise(Articles=length(citations))
mean(fieldCount$Articles)
min(fieldCount$Articles)
max(fieldCount$Articles)
summary(datum$jour)
datum %>%
group_by(jour) %>%
which(length(citations)==1)
jourID=summary(datum$jour)
jourID
which(jourID==1)
subset(jourID<1)
jourID==1
jourID==3
SingleArticleJournals=(jourID==1)
SingleArticleJournals
Which(SingleArticleJournals==TRUE)
which(SingleArticleJournals==TRUE)
#find which journals only have 1 sample
jourArticleCount=datum %>% group_by(jour) %>%
Articles=length(citations)
#find which journals only have 1 sample
jourArticleCount=datum %>% group_by(jour) %>%
length(citations)
#find which journals only have 1 sample
datum %>% group_by(jour) %>% length(citations)
#find which journals only have 1 sample
datum %>% group_by(jour) %>% length(datum$citations)
library(emmeans)
library(lme4)
library(lmerTest)
##### Naive analysis of results
NaiveAnalysis=datum %>% group_by(OAlab) %>%
summarise(Citations=mean(citations),
sdCitations=sd(citations))
NaiveAnalysis
mod1.1=glm(citations~OAlab,data=datum,family=poisson)
mod1.2=glm.nb(citations~OAlab,data=datum)
library(MASS)
mod1.2=glm.nb(citations~OAlab,data=datum)
anova(mod1.1,mod1.2,test='Chisq')
summary(mod1.2)
NaiveResults=emmeans(mod1.2,spec=~OAlab,type="response")
pairs(NaiveResults,adjust="bonferroni")
mod2.0.base=glm(citations~OAlab+auth_count_scaled+JCR_quart+AIS_scaled+year,
data=datum,family=poisson)
###Only used to explore collinearity among variables
vif(mod2.0.base)
library(car)
###Only used to explore collinearity among variables
vif(mod2.0.base)
#####Full analysis with matched pairs
results1 <- glmer(citations~OAlab+auth_count_scaled+JCR_quart+AIS_scaled+year+(1|field/jour/Issue),
data = datum, family = poisson)
#Total number of samples
length(datum$citations)
results2 <- glmer.nb(citations~OAlab+auth_count_scaled+JCR_quart+AIS_scaled+year+(1|field/jour/Issue),
data = datum)
anova(results2,results1,test='Chisq')
results3 <- glmer.nb(citations~OAlab*auth_count_scaled+
JCR_quart+JCR_quart:OAlab+
AIS_scaled+AIS_scaled:OAlab+
year+year:OAlab+
(1|field/jour/Issue),
data = datum)
anova(results3,results2)
Anova(results3)
summmary(results3)
summary(results3)
Anova(results3)
summary(results2)
exp(0.19856)
head(datu)
head(datum)
#Volumes
datum$Volume=as.factor(datum$Volume)
levels(datum$Volume)
summary(datum$Volume)
#####Full analysis with matched pairs
results1 <- glmer(citations~OAlab+auth_count_scaled+JCR_quart+AIS_scaled+year+(1|field/jour/Volume/Issue),
data = datum, family = poisson)
